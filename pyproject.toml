[tool.poetry]
name = "openfisk"
version = "1.0.0"
description = "OpenFisk is an open-source Python library that collects functions for tax-related calculations."
authors = ["Thijs Franck <thijsfranck@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.dev-dependencies]
pre-commit = "^3.4"
pytest = "^7.4"

[tool.pyright]
pythonVersion = "3.12"
reportUnnecessaryTypeIgnoreComment = "error"
typeCheckingMode = "basic"
venv = ".venv"
venvPath = "."

[tool.ruff]
select = ["ALL"]
ignore = [
    # Self and cls do not require annotations.
    "ANN101",
    "ANN102",
    # Pyright error codes are obnoxiously long. Ignore lint telling you to use them.
    "PGH003",
    # No point in documenting magic methods.
    "D105",
    # Makes more sense to use `Parameters` in the main class instead of in the `__init__` .
    "D107",
]
line-length = 100
target-version = "py312"

[tool.ruff.per-file-ignores]
# Ignore unused imports in init, caused by star imports.
# More convenient to provide `__all__` in files instead of duplicating in package __init__.
"__init__.py" = ["F401", "F403", "F405"]
"test__*.py" = ["PLR2004", "S101"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
